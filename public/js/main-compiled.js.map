{"version":3,"sources":["main.js"],"names":[],"mappings":";;;;AAAA,IAAI,QAAO,MAAP,yCAAO,MAAP,OAAkB,QAAlB,IAA8B,QAAO,OAAO,OAAd,MAA0B,QAA5D,EAAsE;AAClE,WAAO,OAAP,GAAiB,oBAAjB;AACH,CAFD,MAEO;AACH,MAAE,QAAF,EAAY,KAAZ,CAAkB,YAAW;AACzB,YAAI,oBAAJ,GAA2B,WAA3B;AACH,KAFD;AAGH;;AAED,SAAS,oBAAT,GAAgC;AAC5B;AACA,SAAK,QAAL,GAAgB,EAAE,sBAAF,CAAhB;AACA,SAAK,IAAL,GAAY,EAAE,MAAF,CAAZ;AACA,SAAK,OAAL,GAAe,EAAE,UAAF,CAAf;AACA;AACA,SAAK,MAAL,GAAc;AACV,uBAAe,2BADL;AAEV,aAAK;AACD,mBAAO,+EADN;AAED,sBAAU;AAFT;AAFK,KAAd;AAOA;AACA,SAAK,MAAL,GAAc,sBAAd;AACH;AACD;;;AAGA,qBAAqB,SAArB,CAA+B,WAA/B,GAA6C,YAAW;AACpD,SAAK,QAAL;AACA,SAAK,UAAL;AACA,SAAK,UAAL;AACH,CAJD;;AAMA,qBAAqB,SAArB,CAA+B,UAA/B,GAA4C,YAAW;AACnD,QAAI,EAAE,YAAF,EAAgB,MAApB,EAA4B;AACxB,aAAK,iBAAL;AACH;AACJ,CAJD;;AAMA,qBAAqB,SAArB,CAA+B,iBAA/B,GAAmD,YAAW;AAC1D,QAAM,YAAY,EAAE,YAAF,CAAlB;AACA,QAAM,uBAAuB,IAAI,KAAJ,EAA7B;AACA,yBAAqB,MAArB,GAA8B,YAAY;AACtC,kBAAU,WAAV,CAAsB,KAAtB;AACH,KAFD;AAGA,yBAAqB,GAArB,GAA2B,UAAU,IAAV,CAAe,KAAf,CAA3B;AACH,CAPD;AAQA;;;AAGA,qBAAqB,SAArB,CAA+B,UAA/B,GAA4C,YAAW;AACnD,SAAK,IAAL,CAAU,EAAV,CAAa,QAAb,EAAuB,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,CAAvB;AACH,CAFD;AAGA;;;AAGA,qBAAqB,SAArB,CAA+B,QAA/B,GAA0C,YAAW;AACjD,SAAK,QAAL,CAAc,KAAd;AACH,CAFD;;AAIA,qBAAqB,SAArB,CAA+B,iBAA/B,GAAmD,UAAS,CAAT,EAAY;AAC3D,QAAI,CAAJ,EAAO;AACH,UAAE,cAAF;AACH;AACD,QAAM,OAAO,KAAK,OAAL,EAAb;;AAEA,QAAI,CAAC,IAAL,EAAW;AACP,aAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,SAAL,CAAe,KAAK,MAAL,CAAY,aAA3B,CAAlB;AACA;AACH;AACD,SAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,WAAL,EAAlB;;AAEA,MAAE,IAAF,CAAO;AACH,6BAAmB,IAAnB,qBADG;AAEH,cAAM,KAFH;AAGH,iBAAS,KAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC,CAHN;AAIH;AACA,eAAO,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CALJ;AAMH,gBAAQ,KAAK,aAAL,CAAmB,KAAnB,CAAyB,IAAzB,EAA+B,CAAC,IAAD,CAA/B;AANL,KAAP;AASH,CArBD;;AAuBA,qBAAqB,SAArB,CAA+B,iBAA/B,GAAmD,YAAW;AAC1D,WAAO,KAAP,CAAa,OAAb,CAAqB,IAArB;AACA,WAAO,EAAP,CAAU,KAAV,CAAgB,KAAhB;AACH,CAHD;;AAKA;;;AAGA,qBAAqB,SAArB,CAA+B,qBAA/B,GAAuD,UAAS,IAAT,EAAe,UAAf,EAA2B,GAA3B,EAAgC;AACnF,SAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACA,SAAK,iBAAL;;AAEA,QAAI,IAAI,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAK,iBAAL;AACH;AACJ,CAPD;;AASA;;;AAGA,qBAAqB,SAArB,CAA+B,mBAA/B,GAAqD,UAAS,GAAT,EAAc;AAC/D,QAAI,IAAI,MAAJ,IAAc,GAAlB,EAAuB;AACnB,aAAK,OAAL,CAAa,IAAb,CAAkB,IAAI,QAAtB;AACH,KAFD,MAEO;AACH,aAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,SAAL,CAAe,KAAK,MAAL,CAAY,GAAZ,CAAgB,QAA/B,CAAlB;AACH;AACJ,CAND;;AAQA,qBAAqB,SAArB,CAA+B,OAA/B,GAAyC,YAAW;AAChD,WAAO,KAAK,QAAL,CAAc,GAAd,GAAoB,IAApB,MAA8B,KAArC;AACH,CAFD;AAGA;;;;AAIA,qBAAqB,SAArB,CAA+B,WAA/B,GAA6C,YAAW;AACpD,WAAO,EAAE,QAAF,EAAY,QAAZ,CAAqB,IAArB,EAA2B,MAA3B,CACH,EAAE,QAAF,EAAY;AACR,aAAK,KAAK,MADF;AAER,aAAK;AAFG,KAAZ,CADG,CAAP;AAMH,CAPD;AAQA;;;;AAIA,qBAAqB,SAArB,CAA+B,SAA/B,GAA2C,UAAS,KAAT,EAAgB;AACvD,WAAO,EAAE,QAAF,EAAY,QAAZ,CAAqB,IAArB,EAA2B,MAA3B,CACH,EAAE,OAAF,EAAW;AACP,cAAM,KADC;AAEP,eAAO;AAFA,KAAX,CADG,CAAP;AAMH,CAPD;AAQA;;;;AAIA,qBAAqB,SAArB,CAA+B,aAA/B,GAA+C,UAAS,IAAT,EAAe;AAC1D,QAAI,OAAO,OAAP,IAAkB,OAAO,OAAP,CAAe,YAArC,EAAmD;AAC/C,gBAAQ,YAAR,CAAqB,EAArB,EAAyB,IAAzB,iBAA4C,IAA5C;AACH;AACJ,CAJD;;AAMA;AACA,SAAS,kBAAT,GAA8B;AAC1B;AACA,QAAM,KAAK,aAAa,QAAxB;AACA,QAAI,EAAJ,EAAQ;AACJ,eAAO,QAAP,CAAgB,IAAhB,mBAAqC,EAArC;AACH,KAFD,MAEO;AACH,eAAO,QAAP,CAAgB,IAAhB,GAAuB,GAAvB,CADG,CACyB;AAC/B;AACJ;;AAED,SAAS,YAAT,GAAwB;AACpB;AACA,iBAAa,QAAb,GAAwB,EAAE,mBAAF,EAAuB,GAAvB,EAAxB;AACA;AACA,WAAO,QAAP,CAAgB,IAAhB,GAAqB,KAArB;AACH;;AAED,EAAE,QAAF,EAAY,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC1B;AACA,MAAE,QAAF,EAAY,EAAZ,CAAe,OAAf,EAAwB,WAAxB,EAAqC;AAAA,eAAM,cAAN;AAAA,KAArC;AACA;AACA,QAAI,OAAO,QAAP,CAAgB,QAAhB,CAAyB,UAAzB,CAAoC,KAApC,CAAJ,EAAgD;AAC5C;AACH;AACJ,CAPD","file":"main-compiled.js","sourcesContent":["if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = HacktoberfestChecker;\n} else {\n    $(document).ready(function() {\n        new HacktoberfestChecker().constructor();\n    });\n}\n\nfunction HacktoberfestChecker() {\n    // DOM nodes cache\n    this.username = $('input[name=username]');\n    this.form = $('form');\n    this.results = $('#results');\n    // some configurable error messages\n    this.errors = {\n        emptyUsername: 'Username cannot be blank.',\n        API: {\n            issue: 'An error occurred while fetching new issues. Have you set your GitHub token? ',\n            username: 'An error occurred while fetching issues for the given username. Have you set your GitHub token? ',\n        }\n    };\n    //the path for the spinner\n    this.loader = '/img/ajax-loader.gif';\n}\n/**\n * in the constructor we'll initialize/retrieve everything that needs to fire when we new this object up\n */\nHacktoberfestChecker.prototype.constructor = function() {\n    this.setFocus();\n    this.bindEvents();\n    this.initialize();\n};\n\nHacktoberfestChecker.prototype.initialize = function() {\n    if ($('#userImage').length) {\n        this.userImageLazyLoad();\n    }\n};\n\nHacktoberfestChecker.prototype.userImageLazyLoad = function() {\n    const imageNode = $('#userImage');\n    const imageElementInstance = new Image();\n    imageElementInstance.onload = function () {\n        imageNode.removeClass('o-0');\n    };\n    imageElementInstance.src = imageNode.attr('src');\n};\n/**\n * the bind events function can be extended as the app grows\n */\nHacktoberfestChecker.prototype.bindEvents = function() {\n    this.form.on('submit', this.getUsernameIssues.bind(this));\n};\n/**\n * Set the focus on the username field\n */\nHacktoberfestChecker.prototype.setFocus = function() {\n    this.username.focus();\n};\n\nHacktoberfestChecker.prototype.getUsernameIssues = function(e) {\n    if (e) {\n        e.preventDefault();\n    }\n    const name = this.getName();\n\n    if (!name) {\n        this.results.html(this.makeError(this.errors.emptyUsername));\n        return;\n    }\n    this.results.html(this.makeSpinner());\n\n    $.ajax({\n        url: `/?username=${name}&plain-data=true`,\n        type: 'GET',\n        success: this.usernameIssuesSuccess.bind(this),\n        //new: add error handler in case of failure during the API call\n        error: this.usernameIssuesError.bind(this),\n        always: this.updateHistory.apply(this, [name])\n    });\n\n};\n\nHacktoberfestChecker.prototype.loadSocialWidgets = function() {\n    window.twttr.widgets.load();\n    window.FB.XFBML.parse();\n};\n\n/**\n * In case of success during API call, display the HTML\n */\nHacktoberfestChecker.prototype.usernameIssuesSuccess = function(html, textStatus, xhr) {\n    this.results.html(html);\n    this.loadSocialWidgets();\n\n    if (xhr.status === 200) {\n        this.userImageLazyLoad();\n    }\n};\n\n/**\n * In case of an error during API call, display an error message\n */\nHacktoberfestChecker.prototype.usernameIssuesError = function(xhr) {\n    if (xhr.status >= 400) {\n        this.results.html(xhr.response);\n    } else {\n        this.results.html(this.makeError(this.errors.API.username));\n    }\n};\n\nHacktoberfestChecker.prototype.getName = function() {\n    return this.username.val().trim() || false;\n};\n/**\n * HTML Helper makeSpinner\n * create the necessary HTML to show the spinner using fluent syntax\n */\nHacktoberfestChecker.prototype.makeSpinner = function() {\n    return $('<div/>').addClass('tc').append(\n        $('<img/>', {\n            src: this.loader,\n            alt: 'Loading...'\n        })\n    );\n};\n/**\n * HTML Helper makeSpinner\n * create the necessary HTML to show an error message using fluent syntax\n */\nHacktoberfestChecker.prototype.makeError = function(error) {\n    return $('<div/>').addClass('tc').append(\n        $('<h2/>', {\n            text: error,\n            class: 'white'\n        })\n    );\n};\n/**\n * History state helper, checks if the replaceState is available\n * before updating the username in the query string.\n */\nHacktoberfestChecker.prototype.updateHistory = function(name) {\n    if (window.history && window.history.replaceState) {\n        history.replaceState({}, name, `?username=${name}`);\n    }\n};\n\n// Functions related to the personalization functions\nfunction redirectToUserPage() {\n    // Get the cached user.\n    const me = localStorage.myGitHub;\n    if (me) {\n        window.location.href = `/?username=${me}`;\n    } else {\n        window.location.href = '/'; // Username not saved, go to main page.\n    }\n}\n\nfunction saveUserPage() {\n    // Save username into localStorage. Recall username by visiting /me.\n    localStorage.myGitHub = $('[name=\"username\"]').val();\n    // Provide some sort of visual feedback. Redirect to that page.\n    window.location.href='/me';\n}\n\n$(document).on('ready', () => {\n    // Save is bound to button press\n    $(document).on('click', '.saveUser', () => saveUserPage());\n    // Works with /me or /me/\n    if (window.location.pathname.startsWith('/me')) {\n        redirectToUserPage();\n    }\n});\n"]}